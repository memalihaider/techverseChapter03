// scripts/insert-competition-modules.js

require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

const modules = [
  {
    module_id: 'ai-hackathon',
    name: 'AI Hackathon',
    category: 'AI',
    entry_fee: 2500,
    min_team_size: 2,
    max_team_size: 4,
    description: 'Develop innovative AI-based solutions within given theme and time limit.',
    prize: 'Top 3 Positions',
    team_size_label: '2-4 members',
    is_active: true,
    display_order: 1,
  },
  {
    module_id: 'ctf',
    name: 'Capture The Flag',
    category: 'Security',
    entry_fee: 2500,
    min_team_size: 1,
    max_team_size: 4,
    description: 'Solve cybersecurity challenges, capture flags, gain points.',
    prize: 'Winner + Runner-up',
    team_size_label: 'Up to 4 members',
    is_active: true,
    display_order: 2,
  },
  {
    module_id: 'fifa',
    name: 'EAFC / FIFA 26',
    category: 'Gaming',
    entry_fee: 1000,
    min_team_size: 1,
    max_team_size: 1,
    description: 'Fast-paced gaming showdown to crown the ultimate EAFC champion.',
    prize: 'Trophy + Cash Prize',
    team_size_label: 'Solo',
    is_active: true,
    display_order: 3,
  },
  {
    module_id: 'line-following',
    name: 'Line Following Robot',
    category: 'Robotics',
    entry_fee: 1500,
    min_team_size: 1,
    max_team_size: 4,
    description: 'Robots follow designated black line track with speed and accuracy.',
    prize: 'Top 3 Teams',
    team_size_label: 'Up to 4 members',
    is_active: true,
    display_order: 4,
  },
  {
    module_id: 'obstacle-avoidance',
    name: 'Obstacle Avoidance Robot',
    category: 'Robotics',
    entry_fee: 1500,
    min_team_size: 1,
    max_team_size: 4,
    description: 'Autonomous robots detect and avoid obstacles while reaching goal.',
    prize: 'Top 3 Teams',
    team_size_label: 'Up to 4 members',
    is_active: true,
    display_order: 5,
  },
  {
    module_id: 'project-showcase',
    name: 'Project Showcase',
    category: 'Innovation',
    entry_fee: 2000,
    min_team_size: 1,
    max_team_size: 3,
    description: 'Present unique tech project — hardware, software, AI, robotics.',
    prize: 'Innovation Awards',
    team_size_label: 'Up to 3 members',
    is_active: true,
    display_order: 6,
  },
  {
    module_id: 'pubg',
    name: 'PUBG LAN',
    category: 'Gaming',
    entry_fee: 2000,
    min_team_size: 4,
    max_team_size: 4,
    description: 'Competitive LAN survival battle to determine ultimate squad.',
    prize: 'Major Squad Reward',
    team_size_label: '4 players (squad)',
    is_active: true,
    display_order: 7,
  },
  {
    module_id: 'scavenger-hunt',
    name: 'Scavenger Hunt',
    category: 'Puzzle',
    entry_fee: 2000,
    min_team_size: 3,
    max_team_size: 5,
    description: 'Campus Clue Mania - Solve riddles, crack codes, find checkpoints.',
    prize: 'First Team Wins',
    team_size_label: '3-5 members',
    is_active: true,
    display_order: 8,
  },
  {
    module_id: 'speed-programming',
    name: 'Speed Programming',
    category: 'Programming',
    entry_fee: 2500,
    min_team_size: 2,
    max_team_size: 3,
    description: 'Solve multiple programming problems under strict timer.',
    prize: 'Fastest Coders',
    team_size_label: '2-3 members',
    is_active: true,
    display_order: 9,
  },
  {
    module_id: 'speed-wiring',
    name: 'Speed Wiring',
    category: 'Electronics',
    entry_fee: 1500,
    min_team_size: 1,
    max_team_size: 2,
    description: 'Electronics wiring challenge — precision + speed decide winner.',
    prize: 'Wiring Champion',
    team_size_label: 'Solo or Duo',
    is_active: true,
    display_order: 10,
  },
  {
    module_id: 'sumo-robot',
    name: 'Sumo Robot War',
    category: 'Robotics',
    entry_fee: 2000,
    min_team_size: 1,
    max_team_size: 3,
    description: 'Autonomous robots push opponents out of ring—power and strategy.',
    prize: 'Category Winners',
    team_size_label: 'Up to 3 members',
    is_active: true,
    display_order: 11,
  },
  {
    module_id: 'tekken',
    name: 'Tekken 8',
    category: 'Gaming',
    entry_fee: 1000,
    min_team_size: 1,
    max_team_size: 1,
    description: 'Knockout brackets tournament to crown ultimate fighting champion.',
    prize: 'Champion Trophy + Reward',
    team_size_label: 'Solo',
    is_active: true,
    display_order: 12,
  },
  {
    module_id: 'ui-ux',
    name: 'UI/UX Design',
    category: 'Design',
    entry_fee: 2000,
    min_team_size: 1,
    max_team_size: 3,
    description: 'Design complete user-friendly interface based on given prompt.',
    prize: 'Design Excellence',
    team_size_label: '1-3 members',
    is_active: true,
    display_order: 13,
  },
  {
    module_id: 'valorant',
    name: 'Valorant',
    category: 'Gaming',
    entry_fee: 2500,
    min_team_size: 5,
    max_team_size: 5,
    description: 'Standard competitive mode tournament for tactical shooter champions.',
    prize: 'Trophy + Cash Reward',
    team_size_label: '5 players',
    is_active: true,
    display_order: 14,
  },
  {
    module_id: 'web-hackathon',
    name: 'Web Hackathon',
    category: 'Programming',
    entry_fee: 2500,
    min_team_size: 2,
    max_team_size: 4,
    description: 'Build and deploy complete web project in limited time.',
    prize: 'Web Development Awards',
    team_size_label: '2-4 members',
    is_active: true,
    display_order: 15,
  },
  {
    module_id: 'hack-the-box',
    name: 'Hack The Box Workshop',
    category: 'Security',
    entry_fee: 0,
    min_team_size: 1,
    max_team_size: 1,
    description: 'Live cybersecurity training: walkthroughs, attack techniques.',
    prize: 'Digital Certificate',
    team_size_label: 'Individual',
    is_active: true,
    display_order: 16,
  }
];

async function main() {
  for (const mod of modules) {
    const { error } = await supabase
      .from('competition_modules')
      .upsert(mod, { onConflict: 'module_id' });
    if (error) {
      console.error(`Error uploading module ${mod.name}:`, error.message);
    } else {
      console.log(`Uploaded: ${mod.name}`);
    }
  }
  console.log('All modules uploaded!');
}

main();